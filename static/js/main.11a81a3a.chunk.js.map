{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","currentIndex","setCurrentIndex","styleWidth","width","useEffect","interval","setInterval","prevIndex","length","undefined","clearInterval","className","slice","map","imgUrl","index","src","alt","style","type","onClick","App","state","this","htmlFor","id","value","onChange","e","setState","Number","target","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gQAwFeA,EA5EmB,SAAC,GAO5B,IANLC,EAMI,EANJA,OAMI,IALJC,YAKI,MALG,EAKH,MAJJC,iBAII,MAJQ,EAIR,MAHJC,iBAGI,MAHQ,IAGR,MAFJC,yBAEI,MAFgB,IAEhB,MADJC,gBACI,SACJ,EAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAa,CACjBC,MAAM,GAAD,OAAKP,EAAL,OAGPQ,qBAAU,WACR,IAAMC,EAAWP,EACbQ,aAAY,WACZL,GAAgB,SAACM,GAAD,OAAgBA,EAAYb,GAAQD,EAAOe,YAC1DX,QACDY,EAEJ,OAAO,WACDJ,GACFK,cAAcL,MAGjB,CAACL,EAAcP,EAAOe,OAAQd,EAAMG,EAAmBC,IA2B1D,OACE,sBAAKa,UAAU,WAAf,UACE,oBAAIA,UAAU,iBAAd,SA1BoBlB,EAAOmB,MAAMZ,EAAcA,EAAeL,GAE3CkB,KAAI,SAACC,EAAQC,GAAT,OACvB,oBAAiBJ,UAAU,qBAA3B,SACE,qBACEK,IAAKF,EACLG,IAAG,UAAKF,EAAQ,GAChBJ,UAAU,QACVO,MAAOhB,KALFY,QA2BT,wBACEK,KAAK,SACLC,QAlBa,WACjBnB,GAAgB,SAACM,GACf,OAAQA,EAAYb,EAAOD,EAAOe,QAAUf,EAAOe,WAcnD,kBAMA,wBACE,UAAQ,OACRW,KAAK,SACLC,QAnBa,WACjBnB,GAAgB,SAACM,GAAD,OAAgBA,EAAYb,GAAQD,EAAOe,WAezD,sBCjEAa,E,4MACJC,MAAQ,CACN7B,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFG,UAAW,IACXD,UAAW,EACXD,KAAM,EACNG,kBAAmB,K,4CAGrB,WAAU,IAAD,OACP,EAMI0B,KAAKD,MALP7B,EADF,EACEA,OACAG,EAFF,EAEEA,UACAD,EAHF,EAGEA,UACAD,EAJF,EAIEA,KACAG,EALF,EAKEA,kBAGF,OACE,sBAAKc,UAAU,MAAf,UAEE,qBAAI,UAAQ,QAAZ,2BAAmClB,EAAOe,OAA1C,aAEA,sBAAKG,UAAU,SAAf,UACE,uBAAOa,QAAQ,SAAf,yBACA,uBACEC,GAAG,SACHN,KAAK,SACLO,MAAO9B,EACP+B,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAC7BjC,UAAWkC,OAAOF,EAAEG,OAAOL,QAAU,OAIzC,uBAAOF,QAAQ,UAAf,yBACA,uBACEC,GAAG,UACHN,KAAK,SACLO,MAAO/B,EACPgC,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAC7BlC,UAAWmC,OAAOF,EAAEG,OAAOL,QAAU,OAIzC,uBAAOF,QAAQ,SAAf,mBACA,uBACEC,GAAG,SACHN,KAAK,SACLO,MAAOhC,EACPiC,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAC7BnC,KAAMoC,OAAOF,EAAEG,OAAOL,QAAU,OAIpC,uBAAOF,QAAQ,cAAf,iCACA,uBACEC,GAAG,cACHN,KAAK,SACLO,MAAO7B,EACP8B,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAC7BhC,kBAAmBiC,OAAOF,EAAEG,OAAOL,QAAU,UAKnD,cAAC,EAAD,CACEjC,OAAQA,EACRC,KAAMA,EACNC,UAAWA,EACXC,UAAWA,EACXC,kBAAmBA,EACnBC,UAAU,W,GAlFFkC,IAAMC,WAyFTZ,IClGfa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.11a81a3a.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step?: number,\n  frameSize?: number,\n  itemWidth?: number,\n  animationDuration?: number,\n  infinite?: boolean,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step = 3,\n  frameSize = 3,\n  itemWidth = 130,\n  animationDuration = 1000,\n  infinite = false,\n}) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const styleWidth = {\n    width: `${itemWidth}px`,\n  };\n\n  useEffect(() => {\n    const interval = infinite\n      ? setInterval(() => {\n        setCurrentIndex((prevIndex) => (prevIndex + step) % images.length);\n      }, animationDuration)\n      : undefined;\n\n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  }, [currentIndex, images.length, step, animationDuration, infinite]);\n\n  const renderImage = () => {\n    const visibleImages = images.slice(currentIndex, currentIndex + frameSize);\n\n    return visibleImages.map((imgUrl, index) => (\n      <li key={imgUrl} className=\"Carousel__list-img\">\n        <img\n          src={imgUrl}\n          alt={`${index + 1}`}\n          className=\"image\"\n          style={styleWidth}\n        />\n      </li>\n    ));\n  };\n\n  const handlePrev = () => {\n    setCurrentIndex((prevIndex) => {\n      return (prevIndex - step + images.length) % images.length;\n    });\n  };\n\n  const handleNext = () => {\n    setCurrentIndex((prevIndex) => (prevIndex + step) % images.length);\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <ul className=\"Carousel__list\">\n        {renderImage()}\n      </ul>\n\n      <button\n        type=\"button\"\n        onClick={handlePrev}\n      >\n        Prev\n      </button>\n      <button\n        data-cy=\"next\"\n        type=\"button\"\n        onClick={handleNext}\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <div className=\"inputs\">\n          <label htmlFor=\"itemId\">Item width:</label>\n          <input\n            id=\"itemId\"\n            type=\"number\"\n            value={itemWidth}\n            onChange={(e) => this.setState({\n              itemWidth: Number(e.target.value) || 0,\n            })}\n          />\n\n          <label htmlFor=\"frameId\">Frame size:</label>\n          <input\n            id=\"frameId\"\n            type=\"number\"\n            value={frameSize}\n            onChange={(e) => this.setState({\n              frameSize: Number(e.target.value) || 0,\n            })}\n          />\n\n          <label htmlFor=\"stepId\">Step:</label>\n          <input\n            id=\"stepId\"\n            type=\"number\"\n            value={step}\n            onChange={(e) => this.setState({\n              step: Number(e.target.value) || 0,\n            })}\n          />\n\n          <label htmlFor=\"animationId\">Animation duration:</label>\n          <input\n            id=\"animationId\"\n            type=\"number\"\n            value={animationDuration}\n            onChange={(e) => this.setState({\n              animationDuration: Number(e.target.value) || 0,\n            })}\n          />\n        </div>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}