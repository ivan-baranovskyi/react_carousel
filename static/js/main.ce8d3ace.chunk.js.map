{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","currentIndex","setCurrentIndex","totalImages","length","containerStyle","width","listStyle","transition","transform","className","style","map","image","index","marginRight","src","alt","height","type","onClick","disabled","App","state","this","htmlFor","id","value","onChange","e","setState","Number","target","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gQAuFeA,EA3EmB,SAAC,GAO5B,IANLC,EAMI,EANJA,OAMI,IALJC,YAKI,MALG,EAKH,MAJJC,iBAII,MAJQ,EAIR,MAHJC,iBAGI,MAHQ,IAGR,MAFJC,yBAEI,MAFgB,IAEhB,MADJC,gBACI,SACJ,EAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAcT,EAAOU,OAmBrBC,EAAsC,CAC1CC,MAAOT,EAAYD,GAGfW,EAAiC,CACrCC,WAAW,aAAD,OAAeV,EAAf,kBACVW,UAAU,eAAD,OAAiBR,EAAeJ,EAAhC,QAGX,OACE,sBAAKa,UAAU,WAAf,UACE,qBAAKA,UAAU,sBAAsBC,MAAON,EAA5C,SACE,oBAAIK,UAAU,2BAA2BC,MAAOJ,EAAhD,SACGb,EAAOkB,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBH,MAAO,CAAEL,MAAOT,EAAWkB,YAAa,IAAxD,SACE,qBACEC,IAAKH,EACLI,IAAG,cAASH,GACZR,MAAOT,EACPqB,OAAQ,OALHL,UAYf,wBACE,UAAQ,OACRM,KAAK,SACLC,QArCa,WACbnB,EAAeN,GAAQ,EACzBO,EAAgBD,EAAeN,GACtBI,GACTG,EAAgBC,EAAcP,IAkC5ByB,SAA2B,IAAjBpB,EAJZ,kBAQA,wBACE,UAAQ,OACRkB,KAAK,SACLC,QArDa,WACbnB,EAAeL,EAAYO,EAC7BD,EAAgBD,EAAeN,GACtBI,GACTG,EAAgB,IAkDdmB,SAAUpB,EAAeL,GAAaO,EAJxC,sBC/DAmB,E,4MACJC,MAAQ,CACN7B,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFG,UAAW,IACXD,UAAW,EACXD,KAAM,EACNG,kBAAmB,K,4CAGrB,WAAU,IAAD,OACP,EAMI0B,KAAKD,MALP7B,EADF,EACEA,OACAG,EAFF,EAEEA,UACAD,EAHF,EAGEA,UACAD,EAJF,EAIEA,KACAG,EALF,EAKEA,kBAGF,OACE,sBAAKY,UAAU,MAAf,UAEE,qBAAI,UAAQ,QAAZ,2BAAmChB,EAAOU,OAA1C,aAEA,sBAAKM,UAAU,SAAf,UACE,uBAAOe,QAAQ,SAAf,yBACA,uBACEC,GAAG,SACHP,KAAK,SACLQ,MAAO9B,EACP+B,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAC7BjC,UAAWkC,OAAOF,EAAEG,OAAOL,QAAU,OAIzC,uBAAOF,QAAQ,UAAf,yBACA,uBACEC,GAAG,UACHP,KAAK,SACLQ,MAAO/B,EACPgC,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAC7BlC,UAAWmC,OAAOF,EAAEG,OAAOL,QAAU,OAIzC,uBAAOF,QAAQ,SAAf,mBACA,uBACEC,GAAG,SACHP,KAAK,SACLQ,MAAOhC,EACPiC,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAC7BnC,KAAMoC,OAAOF,EAAEG,OAAOL,QAAU,OAIpC,uBAAOF,QAAQ,cAAf,iCACA,uBACEC,GAAG,cACHP,KAAK,SACLQ,MAAO7B,EACP8B,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAC7BhC,kBAAmBiC,OAAOF,EAAEG,OAAOL,QAAU,UAKnD,cAAC,EAAD,CACEjC,OAAQ8B,KAAKD,MAAM7B,OACnBC,KAAMA,EACNC,UAAWA,EACXC,UAAWA,EACXC,kBAAmBA,EACnBC,UAAU,W,GAlFFkC,IAAMC,WAyFTZ,IClGfa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ce8d3ace.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step?: number;\n  frameSize?: number;\n  itemWidth?: number;\n  animationDuration?: number;\n  infinite?: boolean;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step = 3,\n  frameSize = 3,\n  itemWidth = 130,\n  animationDuration = 1000,\n  infinite = false,\n}) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const totalImages = images.length;\n  // const totalFrames = Math.ceil(totalImages / frameSize);\n\n  const handleNext = () => {\n    if (currentIndex + frameSize < totalImages) {\n      setCurrentIndex(currentIndex + step);\n    } else if (infinite) {\n      setCurrentIndex(0);\n    }\n  };\n\n  const handlePrev = () => {\n    if (currentIndex - step >= 0) {\n      setCurrentIndex(currentIndex - step);\n    } else if (infinite) {\n      setCurrentIndex(totalImages - frameSize);\n    }\n  };\n\n  const containerStyle: React.CSSProperties = {\n    width: itemWidth * frameSize,\n  };\n\n  const listStyle: React.CSSProperties = {\n    transition: `transform ${animationDuration}ms ease-in-out`,\n    transform: `translateX(-${currentIndex * itemWidth}px)`,\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <div className=\"Carousel__container\" style={containerStyle}>\n        <ul className=\"Carousel__container-list\" style={listStyle}>\n          {images.map((image, index) => (\n            <li key={image} style={{ width: itemWidth, marginRight: 10 }}>\n              <img\n                src={image}\n                alt={`img-${index}`}\n                width={itemWidth}\n                height={130}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <button\n        data-cy=\"prev\"\n        type=\"button\"\n        onClick={handlePrev}\n        disabled={currentIndex === 0}\n      >\n        Prev\n      </button>\n      <button\n        data-cy=\"next\"\n        type=\"button\"\n        onClick={handleNext}\n        disabled={currentIndex + frameSize >= totalImages}\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <div className=\"inputs\">\n          <label htmlFor=\"itemId\">Item width:</label>\n          <input\n            id=\"itemId\"\n            type=\"number\"\n            value={itemWidth}\n            onChange={(e) => this.setState({\n              itemWidth: Number(e.target.value) || 0,\n            })}\n          />\n\n          <label htmlFor=\"frameId\">Frame size:</label>\n          <input\n            id=\"frameId\"\n            type=\"number\"\n            value={frameSize}\n            onChange={(e) => this.setState({\n              frameSize: Number(e.target.value) || 0,\n            })}\n          />\n\n          <label htmlFor=\"stepId\">Step:</label>\n          <input\n            id=\"stepId\"\n            type=\"number\"\n            value={step}\n            onChange={(e) => this.setState({\n              step: Number(e.target.value) || 0,\n            })}\n          />\n\n          <label htmlFor=\"animationId\">Animation duration:</label>\n          <input\n            id=\"animationId\"\n            type=\"number\"\n            value={animationDuration}\n            onChange={(e) => this.setState({\n              animationDuration: Number(e.target.value) || 0,\n            })}\n          />\n        </div>\n\n        <Carousel\n          images={this.state.images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}